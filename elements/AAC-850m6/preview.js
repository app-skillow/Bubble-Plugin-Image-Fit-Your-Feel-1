function(instance, properties) {
    var fallback = "";
    function resolveObjectFit (objectFit) {
        if (objectFit === 1) return 'contain';
        if (objectFit === 2) return 'cover';
        if (objectFit === 3) return 'fill';
        if (objectFit === 4) return 'scale-down';
        return 'none';
    }

    var imgBase64Data = fallback;
    var base64Response = `data:image/jpeg;base64,${imgBase64Data}`;
    var imgId = "img_" + Math.random().toString(16).substring(2, 12);
    var objectFit = resolveObjectFit(properties.object_fit);
    var grayScale = properties.gray_scale ? properties.gray_scale : 0;
    var htmlImg = `<img id="${imgId}" style="width: 50%; height: 50%; object-fit: ${objectFit}; display: block; filter: grayscale(${grayScale}%); margin: auto;" src="${base64Response}"/>`;
    instance.canvas.innerHTML = htmlImg;
}